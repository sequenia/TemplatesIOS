//
//  {{ module_info.name }}.swift
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright © {{ year }} {{ developer.company }}. All rights reserved.
//

// MARK: - {{ module_info.name }}Presenter
protocol {{ module_info.name }}Presenter: class {

    init(view: {{ module_info.name }}View, router: {{ module_info.name }}Router)

    func viewDidLoad()
}

// MARK: - {{ module_info.name }}PresenterImpl
class {{ module_info.name }}PresenterImpl: {{ module_info.name }}Presenter {

// MARK: - VUPER 
    weak var view: {{ module_info.name }}View?
    var router: {{ module_info.name }}Router?

// MARK: - Data
    private var data = {{ module_info.name }}Data()

// MARK: - Init
    required init(view: {{ module_info.name }}View, router: {{ module_info.name }}Router) {
        self.view = view
        self.router = router
    }

// MARK: - Life Cycle
    func viewDidLoad() {
        self.view?.show(data: self.data)
    }

// MARK: - Set Use Сases
    func setUseCase<T>(_ useCase: T) -> Self {
        switch useCase {
       
        default:
            break
        }
        
        return self
    }
    
}
